type Story @model @auth(rules: [{allow: public}]) {
  id: ID!
  imageUrl: [String!]!
  userID: ID! @index(name: "byUser")
}

type Comment @model @auth(rules: [{allow: public}]) {
  id: ID!
  text: String!
  userID: ID! @index(name: "byUser")
  postID: ID! @index(name: "byPost")
  recomment: [ID]
}

type Tag @model @auth(rules: [{allow: public}]) {
  id: ID!
  tagname: String!
  Posts: [Post] @hasMany(indexName: "byTag", fields: ["id"])
}

type Terms @model @auth(rules: [{allow: public}]) {
  id: ID!
  Required: Boolean!
  Event: Boolean!
  Night: Boolean!
  User: User @hasOne
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  imageUri: String
  link: String!
  text: String!
  userID: ID! @index(name: "byUser")
  tagID: ID! @index(name: "byTag")
  Comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: String
  mobile: String
  name: String!
  nickname: String!
  username: String!
  Posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  password: String!
  birthday: AWSDate
  BookMark: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  following: [ID]
  followers: [ID]
  profpic: String
  favoriteMenu: [ID]
  likeposts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  likePosts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  likeStories: [Story] @hasMany(indexName: "byUser", fields: ["id"])
  Stories: [Story] @hasMany(indexName: "byUser", fields: ["id"])
  showStories: [Story] @hasMany(indexName: "byUser", fields: ["id"])
}
 